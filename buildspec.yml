version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "Updating pip and installing dependencies..."
      - pip install --upgrade pip
      - pip install databricks-cli databricks-sdk

  pre_build:
    commands:
      - echo "Setting up Databricks authentication..."
      - export DATABRICKS_TOKEN="dapiee6e44bd23367fa14cb92cc95cf048cb"
      - export DATABRICKS_HOST="https://dbc-5f99fc48-0975.cloud.databricks.com"
      - echo -e "[default]\nhost = $DATABRICKS_HOST\ntoken = $DATABRICKS_TOKEN" > ~/.databrickscfg
      - chmod 600 ~/.databrickscfg  # Secure the file

      - echo "Checking Databricks connection..."
      - nslookup dbc-5f99fc48-0975.cloud.databricks.com
      - curl -I $DATABRICKS_HOST

      - echo "Verifying Databricks workspace access..."
      - databricks workspace ls

  build:
    commands:
      - echo "Checking for my_notebook.py in the repository..."
      - ls -l notebooks/

      - echo "Checking if notebook exists..."
      - databricks workspace ls /Workspace | grep my_notebook && echo "Notebook already exists, deleting..." && databricks workspace delete /Workspace/my_notebook

      - echo "Importing Databricks Notebook..."
      - databricks workspace import notebooks/my_notebook.py /Workspace/my_notebook --language PYTHON --overwrite

      - echo "Validating job configuration..."
      - python -m json.tool job-config.json || { echo "Invalid JSON format in job-config.json! Exiting..."; exit 1; }

      - echo "Upgrading Databricks Jobs API..."
      - databricks jobs configure --version=2.1

      - echo "Deploying Databricks Job..."
      - databricks jobs create --json job-config.json

      - echo "Triggering Job Execution..."
      - databricks jobs run-now --job-id <YOUR_JOB_ID>

  post_build:
    commands:
      - echo "Deployment Completed Successfully!"

artifacts:
  files:
    - "**/*"

